var documenterSearchIndex = {"docs":
[{"location":"examples/ex02/ex02/#Headless-Simulation","page":"Headless Simulation","title":"Headless Simulation","text":"","category":"section"},{"location":"examples/ex02/ex02/","page":"Headless Simulation","title":"Headless Simulation","text":"Upcoming...","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Flight.FlightLib.Dynamics.FrameTransform","page":"API","title":"Flight.FlightLib.Dynamics.FrameTransform","text":"Specify a reference frame c with respect to another b\n\nc is defined by:\n\nr_bc^b: Position vector from b's origin O_b to c's origin O_c, projected on b's axes Ɛ_b\nq^b_c: Rotation quaternion from b's axes Ɛ_b to c's axes Ɛ_c\n\n\n\n\n\n","category":"type"},{"location":"api/#Flight.FlightLib.Dynamics.Wrench","page":"API","title":"Flight.FlightLib.Dynamics.Wrench","text":"Force and torque combination defined on a concrete reference frame\n\nA Wrench is defined on reference frame fc(Oc,εc) when it is applied at its origin Oc and projected on its axes εc\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.:∘-Tuple{FrameTransform, FrameTransform}","page":"API","title":"Base.:∘","text":"Base.:∘(t_bc::FrameTransform, t_cd::FrameTransform)\n\nConcatenate two FrameTransform instances t_bc and t_cd to yield the resulting t_bd.\n\n\n\n\n\n","category":"method"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"examples/ex01/ex01/#Interactive-Simulation","page":"Interactive Simulation","title":"Interactive Simulation","text":"","category":"section"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"This example shows how to set up and run an interactive aircraft simulation. You will be able to control it through the built-in GUI and, optionally, use the free X-Plane 12 demo for 3D visualization.","category":"page"},{"location":"examples/ex01/ex01/#Setting-Up-X-Plane-12","page":"Interactive Simulation","title":"Setting Up X-Plane 12","text":"","category":"section"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Download, install and run the X-Plane 12 demo. If you happen to have the full version, you can use it instead. Since we will be using X-Plane simply as an external visualization tool, we only need to set up a few things; for further help, check out the X-Plane 12 manual.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"note: Without X-Plane\nIf you can't run X-Plane 12 (which might happen for instance if you have an Intel integrated graphics chip), you can skip this section. Your visuals will be limited to the built-in GUI, but everything else should still work.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"From the main menu, click on New Flight. Select the Cessna Skyhawk as your aircraft and Salzburg (LOWS) as your initial location. Start the flight.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"(Image: X-Plane 12 New Flight Screen)","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"To switch to an external camera, press Shift+4. Right click and drag to rotate the view and use the mouse wheel to zoom in and out. To return to the cockpit camera, press Shift+0.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"(Image: X-Plane 12 Settings Icon)","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Move the mouse to the top of the screen to bring up the menu bar. Click on the Settings icon and go the Network tab. Make sure Accept incoming connections is enabled. Then, under the UDP Ports section, check the Port we receive on (legacy) value. The default is 49000, but you can use a different one if you need to. Finally, if you are running X-Plane on a different machine than your Julia session, note its IP address.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"(Image: X-Plane 12 Network Settings)","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Now go to the Graphics tab. Unless you have a multi-monitor setup, you will probably want to run X-Plane in windowed mode. This will allow you to keep it on screen along with the Flight.jl built-in GUI. To enable windowed mode, select Windowed Simulator in the Monitor usage drop-down.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"(Image: X-Plane 12 Graphics Settings)","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"You might also want to experiment with the quality settings until you achieve a comfortable framerate. To display the framerate on screen, go to the Data Output tab, find the Framerate entry in the table and enable the Show in cockpit option.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"(Image: X-Plane 12 Data Output)","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"This concludes our X-Plane setup, now let's move on to Julia.","category":"page"},{"location":"examples/ex01/ex01/#Setting-Up-the-Flight.jl-Simulation","page":"Interactive Simulation","title":"Setting Up the Flight.jl Simulation","text":"","category":"section"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"warning: Configuring Julia for Multithreading\nWhen running an interactive simulation, Flight.jl uses multithreading to concurrently handle the simulation loop, the built-in GUI and any attached I/O devices. Therefore, to work through this example you will need to start Julia with multiple threads enabled. You can find out how to do this in the manual. However, if you are using the Julia extension for VS Code, the easiest way is to add the following entry to your settings.json:\"julia.additionalArgs\": [\n    \"--threads=auto\",\n],This should work well for most modern CPUs. If you have issues running the simulation, try setting the number of threads manually to 4 or higher:\"julia.additionalArgs\": [\n    \"--threads=4\",\n],","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Let's begin by initializing the package:","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"using Flight","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Next, we need to define a 2D location and orthometric elevation for the beginning of Salzburg airport's runway 15, as well as the runway's geographic heading:","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"loc_LOWS15 = LatLon(ϕ = deg2rad(47.80433), λ = deg2rad(12.997))\nh_LOWS15 = HOrth(427.2)\nψ_LOWS15 = deg2rad(157)\nnothing # hide","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"note: A Caveat On X-Plane Visuals\nThe above values will result in X-Plane displaying the aircraft properly positioned and aligned on the runway centerline at the beginning of the simulation. However, this is just for aesthetics, since our simulation's physics are totally independent from X-Plane's terrain mesh. This disconnect will become apparent as soon as the aircraft starts rolling down the runway.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Our simulated world will consist of an aircraft, an atmospheric model and a terrain model:","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"aircraft = Cessna172Xv1()\natmosphere = SimpleAtmosphere()\nterrain = HorizontalTerrain(h_LOWS15)\nworld = SimpleWorld(aircraft, atmosphere, terrain)\nnothing # hide","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"The Cessna172Xv1 aircraft is a hypothetical customization of a Cessna 172S. It replaces the reversible actuation system on the base model with a digital fly-by-wire flight control system, which we will leverage in this example. Note that this aircraft does not aim to replicate the internals or interface of any specific real-world autopilot. Its main purpose is simply to illustrate how the Flight.jl framework can be used to design, implement and test complex control architectures.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"SimpleAtmosphere provides a basic, ISA-based atmospheric model with customizable sea-level conditions and wind velocity. HorizontalTerrain is a terrain model with constant orthometric elevation, which we have set to our previous value for the beginning of runway 15.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Now we can create our simulation:","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"sim = Simulation(world; dt = 0.01) #specifies a suitable integration step size\nnothing # hide","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Under the hood, this call uses our SimpleWorld instance as a blueprint to construct a Model, which is what the Simulation will actually interact with. The Model type is central to the Flight.jl framework, and we will look into it further in future examples.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Next, we instantiate an X-Plane 12 control interface and attach it to the simulation. This will allow the simulation to disable X-Plane's physics engine and periodically send our aircraft's state for X-Plane to display:","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"xp = XPlane12Control()\nSim.attach!(sim, xp)\nnothing # hide","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"note: X-Plane UDP Settings\nThe default XPlane12Control constructor assumes X-Plane 12 is running on your local machine and listening on port 49000. If this is not the case, you will need to provide the appropriate IP address and/or port (discussed in the X-Plane setup section) as keyword arguments. For example:using Flight # hide\nusing Sockets #bring IPv4 into scope\nxp = XPlane12Control(address = IPv4(\"192.168.1.2\"), port = 49001)\nnothing # hide","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Flight.jl provides basic joystick support via SDL2_jll. Currently, Thrustmaster's T.16000M is the only implemented model. Adding support for other joysticks should be relatively straightforward, but we will not get into it here. If you happen to have a T.16000M available, you can plug it in now and do the following:","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"for joystick in update_connected_joysticks()\n    isa(joystick, Joysticks.T16000M) && Sim.attach!(sim, joystick)\nend","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Otherwise, don't worry; in this example, we will let the SAS and autopilot modes handle most of the flying for us. This will make it relatively easy to control the aircraft through the GUI.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"The last step is to define a suitable initial condition. For on-ground initialization, we can do that by specifying the aircraft's frame kinematic state:","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"init_gnd = KinInit(;\n    loc = loc_LOWS15, #2D location\n    h = h_LOWS15 + C172.Δh_to_gnd, #altitude, as an offset with respect to terrain elevation\n    q_nb = REuler(ψ_LOWS15, 0, 0), #attitude with respect to NED frame, as Euler angles\n    ω_wb_b = zeros(3), #angular velocity with respect to local tangent frame, aircraft frame coordinates\n    v_eb_n = zeros(3), #Earth-relative velocity, NED frame coordinates\n    ) |> C172.Init\nnothing # hide","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Then, we assign it as:","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Sim.init!(sim, init_gnd)","category":"page"},{"location":"examples/ex01/ex01/#Running-the-Simulation","page":"Interactive Simulation","title":"Running the Simulation","text":"","category":"section"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Now we can finally start the simulation:","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Sim.run_interactive!(sim)","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"After a few seconds, the simulation will launch, and a new OS window containing the built-in GUI will open:","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"(Image: Default GUI)","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"The Simulation Control panel lets you pause or resume the simulation, and set its pace relative to wall clock time. To abort the simulation, simply close the GUI window.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"The other panel is specific to our simulated Model. A complex Model like ours comprises a hierarchy of components. Each component is itself a Model, and it typically defines its own GUI panel, which can be accessed from that of its parent. Feel free to explore the GUI to get a picture of the underlying component hierarchy and discover different ways of interacting with the simulation.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"tip: GUI State\nGUI panels can be moved, resized, tiled, docked or grouped as tabs. Try to find the layout that works best for you. GUI state is saved in a file named imgui.ini, which is automatically created in the project's root folder.  Deleting this file will restore the GUI to its default state.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Let's get back to X-Plane for a moment. You should now see the aircraft sitting on the runway with the engine stopped. This indicates that the X-Plane interface was set up properly and our simulation has taken control of the visuals.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"(Image: X-Plane 12 Simulation Started)","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"note: X-Plane 12 Demo Time Limit\nThe X-Plane 12 demo is time-limited to 15 minutes. After that, an on-screen pop-up will appear. To get rid of it, you can restart X-Plane and click on Resume Last Flight. You will then need to abort the simulation, reset it and run it again:Sim.init!(sim, init_gnd)\nSim.run_interactive!(sim)","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Now return to the GUI and navigate to Aircraft > Avionics > Flight Control. This panel contains all the flight control inputs and instrumentation for the Cessna172Xv1 model.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"First, locate the Engine Start button under the Engine section. Press and hold it for a couple of seconds to start the engine.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Next, expand the Longitudinal Control Channel and Lateral Control Channel sections. The first one computes throttle and elevator commands. The second one computes aileron and rudder commands. Both are initialized in Direct mode, wherein each actuator command is set directly to the sum of its corresponding Axis and Offset values. With Direct mode active on both channels, you are essentially flying the base Cessna 172S model, except for the additional actuator dynamics.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Try moving the control surfaces using the Axis and Offset inputs, and observe the result on the GUI's numerical displays or an external X-Plane camera. When you are done, reset all values back to zero.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"note: Joystick Override\nIf you have a joystick attached, the Axis sliders will be overridden by the corresponding joystick axes.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"tip: Keyboard Input\nTo assign a precise value to a control slider, use Ctrl+Click (on Windows) or Cmd+click (on Mac) to enable keyboard input.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Under Longitudinal Control, select the Pitch SAS mode. In this mode, direct throttle control is preserved, but elevator inputs are fed to a pitch compensator, which computes the actual elevator actuator commands. The pitch compensator modifies the natural short-period and phugoid modes, providing a smoother, more stable pitch response. When clicked, the button will turn amber, indicating the mode is now on standby; it will engage automatically upon lift off.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Under Lateral Control, select the Roll/Yaw SAS mode. In this mode, both aileron and rudder inputs are fed to a lateral compensator, which simultaneously computes aileron and rudder actuator commands. This improves the aircraft's Dutch roll response and stabilizes its naturally unstable spiral mode.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Currently, the GUI does not have a graphical instrument panel. Instead, the Flight Data section provides readouts for all essential variables. This will be particularly useful if you're running this example without X-Plane.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"(Image: Take-Off GUI)","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"That is all we really need to set up for take off. We won't bother with flap settings, rotation or even keeping the aircraft centered on the runway (which, as far as our simulation is concerned, doesn't really exist!). When you're ready, just set the Throttle Axis all the way to 1 and let the aircraft accelerate and lift off on its own.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Once airborne, you will see the previously selected SAS modes turn from amber to green. Let the aircraft climb for a while to give yourself some clearance. Then, spend some time flying with the SAS modes enabled. When you feel comfortable with the controls, try switching back and forth between the Direct and Pitch SAS modes, and compare the aircraft's response to elevator input. You can do the same with the Direct and Roll/Yaw SAS modes to compare aileron and rudder responses, but mind the spiral mode instability!","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"tip: Crash Recovery\nIf a crash is detected, the landing gear model will throw an exception and the simulation will abort. No problem, just reset it and have another go:Sim.init!(sim, init_gnd)\nSim.run_interactive!(sim)","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Next, try the EAS + Pitch Rate mode. This mode combines an autothrottle loop with a pitch rate loop built on top of the pitch SAS. Activating this mode will disable all Throttle and Elevator inputs and enable the EAS and Pitch Rate commands. The numerical readout to the right of each command slider shows the current value of its target variable. Try changing the EAS command and observe the response. Then, experiment with the Pitch Rate command. While doing so, keep in mind that an arbitrary pitch rate cannot be sustained indefinitely!","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"note: Mode Transitions\nWhen a new autopilot mode is engaged, its command variables are automatically set to their current values to provide a smooth transition. The exception are Pitch Rate and Roll Rate commands, which are always initialized to zero.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"When you are done, enable the EAS + Climb Rate mode. Set the EAS command to 50 m/s and the Climb Rate command to zero. This will hold your altitude throughout the next steps.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"If you have attempted any turns so far, you may have noticed that the Roll/Yaw SAS mode does not provide automatic turn compensation. For this, you can use one of the higher level lateral modes, all of which track sideslip angle commands. Go ahead and enable the Bank Angle + Sideslip mode. Set the Sideslip Angle command to zero. Then, initiate a turn with the Bank Angle command, and notice how the sideslip angle is indeed held during the turn.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Finally, enable the Course Angle + Sideslip mode. Set the Course Angle to 0 and let the aircraft turn to intercept it. Then, open the Atmosphere > Wind panel. Use the East slider to add some crosswind. Notice how the aircraft turns into the wind, settling on the appropriate heading to maintain the commanded course angle, while also tracking the commanded sideslip angle.","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"(Image: Course Tracking GUI)","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"One final hint before wrapping up. If the whole take-off sequence starts getting tedious, you can skip it entirely by using the trim functionality to initialize the aircraft in flight. Here's how to do it:","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"init_air = C172.TrimParameters(;\n    Ob = Geographic(loc_LOWS15, h_LOWS15 + 500), #500 m above runway 15\n    EAS = 50.0, #equivalent airspeed (m/s)\n    ψ_nb = ψ_LOWS15, #runway heading (rad)\n    γ_wb_n = 0.0, #wind-relative flight path angle (rad)\n    ψ_wb_dot = 0.0, #turn rate (rad/s)\n    flaps = 0.0, #flaps position (0 to 1)\n    fuel_load = 0.5, #normalized fuel load (0 to 1)\n)\nSim.init!(sim, init_air)","category":"page"},{"location":"examples/ex01/ex01/","page":"Interactive Simulation","title":"Interactive Simulation","text":"Feel free to explore the remaining control modes and the altitude guidance function on your own. For more information on Cessna172Xv1's flight controller, check out the source code and the design notebooks for the longitudinal and lateral control channels.","category":"page"},{"location":"#About-Flight.jl","page":"About Flight.jl","title":"About Flight.jl","text":"","category":"section"},{"location":"#Introduction","page":"About Flight.jl","title":"Introduction","text":"","category":"section"},{"location":"","page":"About Flight.jl","title":"About Flight.jl","text":"A brief introduction to the package.","category":"page"},{"location":"#Installation","page":"About Flight.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"About Flight.jl","title":"About Flight.jl","text":"Flight.jl is made up of three modules.","category":"page"},{"location":"","page":"About Flight.jl","title":"About Flight.jl","text":"","category":"page"}]
}
